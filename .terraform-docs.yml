formatter: "markdown"

output:
  file: "README.md"
  mode: replace
  template: |-
    # Terraform AWS Directus Module

    This Terraform module deploys Directus on an AWS Fargate ECS cluster.

    ## Usage

    ```hcl
    module "directus" {
      source  = "GiamPy5/directus/aws"

      application_name = local.name                # Change this to your application name
      admin_email      = "fake-email@email.com"    # Change this to your email address
      vpc_id           = module.vpc.vpc_id         # Change this to your VPC ID
      subnet_ids       = module.vpc.public_subnets # Change this to your subnet IDs

      create_cloudwatch_logs_group  = true
      cloudwatch_logs_stream_prefix = "directus"

      cpu    = 1024
      memory = 2048

      ecs_service_enable_execute_command = true # Allows you to connect via CLI to the ECS Task Container (just like `docker exec`). It's disabled by default.
      enable_ses_emails_sending          = true
      force_new_ecs_deployment_on_apply  = true

      # Add additional custom configuration here (https://docs.directus.io/self-hosted/config-options.html#configuration-options)
      additional_configuration = {
        "LOG_LEVEL" = "debug"
      }

      rds_database_name                         = "database_name"
      rds_database_host                         = "database_host"
      rds_database_port                         = "database_port"
      rds_database_engine                       = "database_engine"
      rds_database_username                     = "database_username"
      rds_database_password_secrets_manager_arn = "database_user_password_secrets_manager_arn"

      redis_host = module.elasticache.cluster_cache_nodes[0].address
      redis_port = module.elasticache.cluster_cache_nodes[0].port

      create_s3_bucket = true # If you do not create an S3 bucket, you will need to provide an existing S3 bucket name
      s3_bucket_name   = "terraform-aws-directus-${local.region}"

      healthcheck_path = "/server/health"
      image_tag        = "10.12"

      autoscaling = {
        enable           = true
        cpu_threshold    = 60
        memory_threshold = 80
        min_capacity     = 1
        max_capacity     = 2
      }

      tags = {
        Application = "Directus"
        Environment = "Test"
      } # Change these tags to your prefered tags

    ```

    For further information on a complete example (including all dependencies, such as database inputs) check [here](https://github.com/GiamPy5/terraform-aws-directus/tree/main/examples).

    ## Features

    - Easy deployment of Directus on AWS Fargate ECS
    - Automatic scaling and load balancing
    - Highly available and fault-tolerant architecture
    - Customizable configuration options
    - S3 integration for static assets

    ## To-Be-Done

    - Implement Redis to allow multi-container deployment (currently only one is supported) (https://docs.directus.io/self-hosted/config-options.html#redis)
    - Implement Amazon Cognito authentication
    - HTTPS support

    ## Prerequisites

    Before using this module, make sure you have the following prerequisites:

    - AWS account
    - Terraform installed
    - Basic knowledge of AWS services and Terraform

    <!-- BEGIN_TF_DOCS -->
    {{ .Content }}
    <!-- END_TF_DOCS -->

    ## Contributing

    Contributions to this module are welcome! If you encounter any issues or have suggestions for improvements, please open an issue or submit a pull request on the GitHub repository.

    ## License

    This module is open source and available under the [MIT License](https://opensource.org/licenses/MIT).
    {{/** End of file fixer */}}
